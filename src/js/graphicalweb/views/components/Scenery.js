/*global define, $, TWEEN, Savage */
define(['text!graphicalweb/views/html/scenery.html',
        'graphicalweb/controllers/CameraController',
        'graphicalweb/models/AssetModel',
        'graphicalweb/utils/CSS3Helper'
        ],

	function (scenery_html, 
        Camera, 
        AssetModel,
        CSS3Helper) {
		
		var Scenery = function () {
			var instance = this,
                USE_CANVAS = false,
                curvy = false,
                frame = 0,
                goalFrame = 0,
                bgposition = 0,
                delta = {x: -200},
                elementcount = 5,
                parallaxitems,
                terrainInterval,
                $body,
                $container,
                $clouds,
                canvas,
                ctx,
                el = [],
                parallaxA = [],
                imgList = [];
                
//private

            /**
             * draw using one canvas
             */
            function draw() {
                var i = 4,
                    img,
                    pattern,
                    num;

                ctx.clearRect(0, 0, canvas.width, canvas.height);

                for (i; i > -1; i -= 1) {
                    img = imgList[i][frame];
                    pattern = ctx.createPattern(img, 'repeat-x');
                    ctx.fillStyle = pattern;
                    ctx.rect(0, 0, canvas.width, canvas.height);
                    ctx.fill();
                    //ctx.drawImage(img, 0, 0);
                }
            }

            /*
            //draw using multiple canvas elements (for parallax?)
            function draw() {
                var i = 0,
                    img,
                    pattern,
                    num,
                    canvas,
                    ctx;

                for (i; i < parallaxA.length; i += 1) {
                    canvas = parallaxA[i].canvas;
                    ctx = parallaxA[i].context;
                    img = imgList[i][frame];
                    ctx.clearRect(0, 0, canvas.width, canvas.height);
                    pattern = ctx.createPattern(img, 'repeat-x');
                    ctx.fillStyle = pattern;
                    ctx.rect(0, 0, canvas.width, canvas.height);
                    ctx.fill();
                }
            }
            */

            function parallax() {
                var i = 0,
                    item,
                    offset;

                for (i; i < parallaxitems.length; i += 1) {
                    item = parallaxitems[i];
                    offset = $(parallaxitems[i]).data('offset');
                    CSS3Helper.setTransform(item, 'translate(' + (delta.x * offset) + 'px, 0px)');
                }
            }

            function updateTerrain() {
                if (frame > goalFrame) {
                    frame -= 1;
                } else if (frame < goalFrame) {
                    frame += 1;
                } else {
                    return;
                }

                draw();
                setTimeout(updateTerrain, 20);
            }

            function setupImageList() {
                var i = 0,
                    num = 0,
                    j, 
                    arr;

                for (i; i < 5; i += 1) {
                    j = 0;
                    arr = [];
                    for (j; j < 10; j += 1) {
                        arr.push(AssetModel.groundA[num].img);
                        num += 1;
                    }
                    imgList.push(arr);
                }
            }
            
            function setupSVG() {
                parallaxitems = $('#parallaxA').find('.parallax-item');

                Savage(function () {
                    var s = Savage('parallaxA', 4435, 768);
                    el[0] = s.rect(0, 276.5, 4435, 491.5);
                    el[0].data("from", "M4435,768V440c-4.152,0.44-8.736,0-13.879,0c-47.658,0-47.658,0-95.316,0s-47.658,0-95.315,0s-47.657,0-95.315,0s-47.658,0-95.316,0s-47.658,0-95.316,0s-47.658,0-95.316,0s-47.658,0-95.317,0c-47.658,0-47.658,0-95.316,0c-47.657,0-47.657,0-95.315,0s-47.658,0-95.315,0c-47.658,0-47.658,0-95.316,0s-47.658,0-95.316,0s-47.658,0-95.316,0c-47.659,0-47.659,0-95.317,0s-47.658,0-95.316,0c-47.655,0-47.655,0-95.311,0c-47.656,0-47.656,0-95.312,0c-47.657,0-47.657,0-95.313,0c-47.658,0-47.658,0-95.315,0c-47.659,0-47.659,0-95.317,0s-47.658,0-95.317,0c-47.658,0-47.658,0-95.316,0c-47.657,0-47.657,0-95.314,0s-47.657,0-95.314,0s-47.657,0-95.314,0c-47.659,0-47.659,0-95.319,0c-47.657,0-47.657,0-95.314,0c-47.659,0-47.659,0-95.318,0c-47.658,0-47.658,0-95.315,0c-47.658,0-47.658,0-95.316,0c-47.659,0-47.659,0-95.317,0s-47.659,0-95.317,0c-47.658,0-47.658,0-95.317,0c-47.66,0-47.66,0-95.32,0c-47.659,0-47.659,0-95.318,0c-47.659,0-47.659,0-95.318,0c-47.66,0-47.66,0-95.32,0s-47.66,0-95.32,0s-47.66,0-95.32,0c-47.659,0-47.659,0-95.318,0c-47.66,0-47.66,0-95.319,0c-47.658,0-47.658,0-95.317,0c-47.661,0-47.661,0-95.321,0c-47.66,0-47.66,0-95.319,0c-47.66,0-47.66,0-95.321,0c-47.66,0-47.66,0-95.319,0C19.906,440,11.33,440,0,440v328H4435z");
                    el[0].data("to", "M4435,768V359.192c-4.152,0.44-8.736,0.688-13.879,0.688c-47.658,0-47.658-7.216-95.316-7.216s-47.658-15.816-95.315-15.816s-47.657,21.401-95.315,21.401s-47.658-17.703-95.316-17.703s-47.658,18.16-95.316,18.16s-47.658,2.097-95.316,2.097s-47.658-10.104-95.317-10.104c-47.658,0-47.658-15.372-95.316-15.372c-47.657,0-47.657,1.202-95.315,1.202s-47.658,16.684-95.315,16.684c-47.658,0-47.658,5.121-95.316,5.121s-47.658-0.747-95.316-0.747s-47.658-3.859-95.316-3.859c-47.659,0-47.659-10.189-95.317-10.189s-47.658,8.807-95.316,8.807c-47.655,0-47.655-0.307-95.311-0.307c-47.656,0-47.656-24.248-95.312-24.248c-47.657,0-47.657,11.411-95.313,11.411c-47.658,0-47.658-3.672-95.315-3.672c-47.659,0-47.659,7.667-95.317,7.667s-47.658-9.428-95.317-9.428c-47.658,0-47.658,17.937-95.316,17.937c-47.657,0-47.657-9.5-95.314-9.5s-47.657,23.309-95.314,23.309s-47.657-14.221-95.314-14.221c-47.659,0-47.659-12.411-95.319-12.411c-47.657,0-47.657-2.271-95.314-2.271c-47.659,0-47.659,13.285-95.318,13.285c-47.658,0-47.658-15.417-95.315-15.417c-47.658,0-47.658,32.384-95.316,32.384c-47.659,0-47.659-18.805-95.317-18.805s-47.659,11.379-95.317,11.379c-47.658,0-47.658-1.325-95.317-1.325c-47.66,0-47.66,5.394-95.32,5.394c-47.659,0-47.659-34.92-95.318-34.92c-47.659,0-47.659,29.183-95.318,29.183c-47.66,0-47.66-21.984-95.32-21.984s-47.66,25.9-95.32,25.9s-47.66-12.704-95.32-12.704c-47.659,0-47.659-9.984-95.318-9.984c-47.66,0-47.66-6.714-95.319-6.714c-47.658,0-47.658,33.977-95.317,33.977c-47.661,0-47.661-24.904-95.321-24.904c-47.66,0-47.66,18.162-95.319,18.162c-47.66,0-47.66-28.072-95.321-28.072c-47.66,0-47.66,15.142-95.319,15.142c-16.642,0-27.47,1.757-36.548,4.043V768H4435z,");
                    el[0].attr({
                        fill: "#e6e6e6",
                        clip: el[0].data("from"),
                        'class': 'hills0'
                    });
                    
                    el[1] = s.group();
                    el[1].add(
                        s.rect(1.797, 304.875, 4433, 463).attr({fill: "#d5d5d5", 'class': 'hills1'}),
                        s.circle(1458, 328, 48).attr({fill: "#fff"}),
                        s.circle(1265, 311, 48).attr({fill: "#fff"}),
                        s.circle(882, 291, 48).attr({fill: "#fff"}),
                        s.circle(363, 304, 48).attr({fill: "#fff"}),
                        s.circle(2140, 336, 48).attr({fill: "#fff"}),
                        s.circle(2986, 304, 48).attr({fill: "#fff"}),
                        s.circle(2226, 342, 48).attr({fill: "#fff"})
                    );
                    el[1].data("from", "M4402.739,450c-23.917,0-23.917,0-47.835,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.835,0s-23.917,0-47.835,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.837,0c-23.917,0-23.917,0-47.835,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.837,0c-23.917,0-23.917,0-47.835,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.836,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.836,0s-23.918,0-47.835,0s-23.917,0-47.835,0s-23.918,0-47.836,0s-23.918,0-47.835,0c-23.919,0-23.919,0-47.837,0s-23.918,0-47.835,0c-23.919,0-23.919-1.193-47.837-1.193S3374.281,450,3350.364,450c-23.919,0-23.919,0-47.837,0s-23.918,0-47.835,0c-23.918,0-23.918,0-47.836,0c-23.917,0-23.917,0-47.835,0s-23.918,0-47.836,0s-23.918,0-47.836,0s-23.918,0-47.837,0c-23.917,0-23.917,0-47.835,0s-23.918,0-47.837,0c-23.917,0-23.917,0-47.835,0s-23.918,0-47.837,0c-23.918,0-23.918,0-47.836,0c-23.917,0-23.917,0-47.833,0c-23.915,0-23.915,0-47.83,0c-23.917,0-23.917,0-47.834,0c-23.916,0-23.916,0-47.833,0c-23.915,0-23.915,0-47.831,0c-23.918,0-23.918,0-47.835,0s-23.917,0-47.833,0s-23.916,0-47.832,0c-23.919,0-23.919,0-47.838,0c-23.916,0-23.916,0-47.832,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.835,0c-23.916,0-23.916,0-47.833,0c-23.919,0-23.919,0-47.838,0c-23.917,0-23.917,0-47.833,0c-23.918,0-23.918,0-47.837,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.837,0c-23.917,0-23.917,0-47.834,0c-23.919,0-23.919,0-47.838,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.837,0c-23.918,0-23.917,0-47.835,0c-23.917,0-23.917,0-47.835,0c-23.919,0-23.919,0-47.838,0c-23.918,0-23.918,0-47.835,0c-23.918,0-23.918,0-47.836,0c-23.92,0-23.919,0-47.839,0c-23.918,0-23.918,0-47.837,0c-23.918,0-23.918,0-47.836,0s-23.918,0-47.836,0s-23.918,0-47.837,0c-23.919,0-23.919,0-47.839,0c-23.92,0-23.92,0-47.839,0s-23.919,0-47.839,0c-23.919,0-23.919,0-47.839,0c-23.919,0-23.919,0-47.838,0s-23.919,0-47.838,0s-23.919,0-47.837,0c-23.92,0-23.92,0-47.84,0c-23.919,0-23.919,0-47.838,0c-23.92,0-23.92,0-47.839,0s-23.919,0-47.838,0c-23.919,0-23.919,0-47.839,0c-23.92,0-23.92,0-47.84,0c-23.917,0-23.917,0-47.834,0c-23.918,0-23.918,0-47.836,0c-23.92,0-23.92,0-47.841,0c-23.918,0-23.918,0-47.837,0c-23.919,0-23.919,0-47.839,0c-23.918,0-23.918,0-47.837,0c-23.919,0-23.919,0-47.839,0s-23.919,0-47.839,0c-23.921,0-23.921,0-47.842,0s-23.921,0-47.842,0c-23.92,0-23.92,0-47.841,0c-23.921,0-23.921,0-47.843,0c-23.92,0-23.92,0-47.84,0c-0.616,0-1.212-0.076-1.797,0v318h4435V450C4423.999,450,4419.927,450,4402.739,450z");
                    el[1].data("to", "M4402.739,409.892c-23.917,0-23.917-16.267-47.835-16.267c-23.917,0-23.917,25.312-47.834,25.312c-23.918,0-23.918-54.833-47.835-54.833s-23.917,48.942-47.835,48.942c-23.917,0-23.917-91.232-47.834-91.232c-23.918,0-23.918,112.102-47.837,112.102c-23.917,0-23.917-98.037-47.835-98.037c-23.917,0-23.917,24.844-47.834,24.844c-23.918,0-23.918,34.378-47.837,34.378c-23.917,0-23.917-90.226-47.835-90.226c-23.917,0-23.917,44.382-47.834,44.382c-23.918,0-23.918,84.521-47.836,84.521c-23.917,0-23.917-33.216-47.834-33.216c-23.918,0-23.918-85.547-47.836-85.547s-23.918,96.386-47.835,96.386s-23.917-47.061-47.835-47.061s-23.918,65.458-47.836,65.458s-23.918-37.603-47.835-37.603c-23.919,0-23.919-18.963-47.837-18.963s-23.918,60.041-47.835,60.041c-23.919,0-23.919,15.533-47.837,15.533s-23.918-31.13-47.835-31.13c-23.919,0-23.919-103.016-47.837-103.016s-23.918,99.299-47.835,99.299c-23.918,0-23.918-16.29-47.836-16.29c-23.917,0-23.917-72.287-47.835-72.287s-23.918,104.572-47.836,104.572s-23.918,0.727-47.836,0.727s-23.918-112.816-47.837-112.816c-23.917,0-23.917,93.445-47.835,93.445s-23.918-63.646-47.837-63.646c-23.917,0-23.917,76.929-47.835,76.929s-23.918-47.853-47.837-47.853c-23.918,0-23.918,59.188-47.836,59.188c-23.917,0-23.917-34.322-47.833-34.322c-23.915,0-23.915,22.663-47.83,22.663c-23.917,0-23.917-2.019-47.834-2.019c-23.916,0-23.916-77.129-47.833-77.129c-23.915,0-23.915,57.779-47.831,57.779c-23.918,0-23.918,21.823-47.835,21.823s-23.917-65.511-47.833-65.511s-23.916,89.524-47.832,89.524c-23.919,0-23.919-31.635-47.838-31.635c-23.916,0-23.916,22.956-47.832,22.956c-23.917,0-23.917-86.899-47.834-86.899c-23.918,0-23.918,41.763-47.835,41.763c-23.916,0-23.916-74.859-47.833-74.859c-23.919,0-23.919,122.481-47.838,122.481c-23.917,0-23.917-43.182-47.833-43.182c-23.918,0-23.918-53.135-47.837-53.135c-23.917,0-23.917,87.116-47.834,87.116c-23.918,0-23.918-41.411-47.837-41.411c-23.917,0-23.917,25.549-47.834,25.549c-23.919,0-23.919-95.072-47.838-95.072c-23.917,0-23.917,107.309-47.834,107.309c-23.918,0-23.918-89.945-47.837-89.945c-23.918,0-23.917,105.822-47.835,105.822c-23.917,0-23.917-30.711-47.835-30.711c-23.919,0-23.919-80.547-47.838-80.547c-23.918,0-23.918,62.859-47.835,62.859c-23.918,0-23.918-91.01-47.836-91.01c-23.92,0-23.919,106.433-47.839,106.433c-23.918,0-23.918-28.378-47.837-28.378c-23.918,0-23.918,40.077-47.836,40.077s-23.918-103.779-47.836-103.779s-23.918,105.795-47.837,105.795c-23.919,0-23.919-18.489-47.839-18.489c-23.92,0-23.92,9.5-47.839,9.5s-23.919-57.052-47.839-57.052c-23.919,0-23.919,44.183-47.839,44.183c-23.919,0-23.919-72.319-47.838-72.319s-23.919,92.194-47.838,92.194s-23.919-111.578-47.837-111.578c-23.92,0-23.92,108.041-47.84,108.041c-23.919,0-23.919-42.549-47.838-42.549c-23.92,0-23.92,2.34-47.839,2.34s-23.919-68.62-47.838-68.62c-23.919,0-23.919,93.136-47.839,93.136c-23.92,0-23.92-51.614-47.84-51.614c-23.917,0-23.917,69.081-47.834,69.081c-23.918,0-23.918,6.511-47.836,6.511c-23.92,0-23.92-61.143-47.841-61.143c-23.918,0-23.918,44.471-47.837,44.471c-23.919,0-23.919-94.331-47.839-94.331c-23.918,0-23.918,91.588-47.837,91.588c-23.919,0-23.919,6.229-47.839,6.229s-23.919-82.778-47.839-82.778c-23.921,0-23.921,63.681-47.842,63.681s-23.921,1.675-47.842,1.675c-23.92,0-23.92-71.316-47.841-71.316c-23.921,0-23.921,71.247-47.843,71.247c-23.92,0-23.92-30.831-47.84-30.831c-0.616,0-1.212,0.048-1.797,0.124V768h4435V321.666C4424.764,353.439,4419.927,409.892,4402.739,409.892z");
                    el[1].attr({
                        clip: el[1].data("from"),
                        'class': 'hills1'
                    });
                    
                    el[2] = s.rect(0, 410, 4435, 358).attr({fill: "#c2c2c2"});
                    el[2].attr({'class': 'hills2'});
                    el[2].data("from", "M4338.957,485c-88.047,0-88.047,0-176.093,0c-88.048,0-88.048,0-176.095,0c-88.046,0-88.046,0-176.092,0c-88.047,0-88.047,0-176.094,0s-88.047,0-176.095,0c-88.044,0-88.044,0-176.088,0c-88.046,0-88.046,0-176.091,0s-88.045,0-176.091,0c-88.045,0-88.045,0-176.09,0c-88.048,0-88.048,0-176.096,0c-88.046,0-88.046,0-176.092,0s-88.046,0-176.092,0c-88.048,0-88.048,0-176.096,0c-88.047,0-88.047,0-176.095,0c-88.047,0-88.047,0-176.094,0s-88.047,0-176.095,0s-88.048,0-176.096,0s-88.048,0-176.097,0c-88.047,0-88.047,0-176.095,0c-88.046,0-88.046,0-176.093,0c-88.048,0-88.048,0-176.095,0c-88.049,0-88.049,0-176.098,0c-88.048,0-88.048,0-176.096,0c-88.052,0-88.052,0-176.104,0C52.287,485,35.33,485,0,485v283h4435V485C4412,485,4388.822,485,4338.957,485z");
                    el[2].data("to", "M4338.957,439.62c-88.047,0-88.047,44-176.093,44c-88.048,0-88.048-44-176.095-44c-88.046,0-88.046,44-176.092,44c-88.047,0-88.047-44-176.094-44s-88.047,44-176.095,44c-88.044,0-88.044-44-176.088-44c-88.046,0-88.046,44-176.091,44s-88.045-44-176.091-44c-88.045,0-88.045,44-176.09,44c-88.048,0-88.048-44-176.096-44c-88.046,0-88.046,44-176.092,44s-88.046-44-176.092-44c-88.048,0-88.048,44-176.096,44c-88.047,0-88.047-44-176.095-44c-88.047,0-88.047,44-176.094,44s-88.047-44-176.095-44s-88.048,44-176.096,44s-88.048-44-176.097-44c-88.047,0-88.047,44-176.095,44c-88.046,0-88.046-44-176.093-44c-88.048,0-88.048,44-176.095,44c-88.049,0-88.049-44-176.098-44c-88.048,0-88.048,44-176.096,44c-88.052,0-88.052-44-176.104-44c-60.409,0-78.762,17.837-112.696,30.99V768h4435V463.415C4410.029,451.773,4388.822,439.62,4338.957,439.62z");
                    el[2].attr({clip: el[2].data("from")});
                    
                    el[3] = s.rect(-2, 407, 4437, 360).attr({fill: "#cdcdcd"});
                    el[3].attr({'class': 'hills3'});
                    el[3].data("from", "M4415.31,550c-36.226,0-36.226,0-72.451,0c-36.228,0-36.228,0-72.454,0s-36.227,0-72.452,0c-36.225,0-36.225,0-72.449,0c-36.224,0-36.224,0-72.447,0s-36.224,0-72.446,0c-36.226,0-36.226,0-72.451,0s-36.226,0-72.451,0c-36.227,0-36.227,0-72.453,0c-36.225,0-36.225,0-72.449,0c-36.226,0-36.226,0-72.451,0s-36.226,0-72.451,0c-36.225,0-36.225,0-72.449,0s-36.225,0-72.45,0s-36.226,0-72.451,0c-36.224,0-36.224,0-72.448,0c-36.226,0-36.226,0-72.451,0c-36.225,0-36.225,0-72.449,0c-36.224,0-36.224,0-72.447,0c-36.225,0-36.225,0-72.448,0c-36.226,0-36.226,0-72.45,0c-36.226,0-36.226,0-72.451,0c-36.225,0-36.225,0-72.45,0s-36.226,0-72.45,0c-36.224,0-36.224,0-72.447,0c-33.936,0-33.936,0-65.999,0h-25.988c-18.458-1.898-24.715,0-52.904,0c-36.224,0-36.224,0-72.446,0c-36.226,0-36.226,0-72.451,0c-36.223,0-36.223,0-72.445,0s-36.223,0-72.444,0c-36.225,0-36.225,0-72.449,0c-36.222,0-36.222,0-72.444,0s-36.223,0-72.444,0c-36.224,0-36.224,0-72.448,0c-36.221,0-36.221,0-72.442,0c-36.225,0-36.225,0-72.448,0c-36.225,0-36.225,0-72.449,0s-36.225,0-72.449,0s-36.225,0-72.449,0c-36.224,0-36.224,0-72.448,0s-36.225,0-72.45,0c-36.225,0-36.225,0-72.449,0c-36.224,0-36.224,0-72.448,0c-36.224,0-36.224,0-72.448,0c-36.223,0-36.223,0-72.447,0c-36.224,0-36.224,0-72.447,0c-36.225,0-36.225,0-72.449,0c-36.224,0-36.224,0-72.448,0c-36.224,0-36.224,0-72.447,0s-36.224,0-72.447,0c-36.225,0-36.225,0-72.45,0c-36.223,0-36.223,0-72.447,0s-36.224,0-72.447,0c-36.225,0-36.225,0-72.449,0c-36.224,0-36.224,2.319-72.447,2.319c-36.224,0-36.224-2.319-72.448-2.319s-36.224,0-72.447,0c-36.223,0-36.223,0-72.446,0c-36.225,0-36.225,0-72.449,0C33.59,550,32.187,550.497,0,550v115.062c0.854,0.11,1.688,0.254,2.5,0.433V768H4435V550C4429.709,553.309,4423.42,550,4415.31,550z");
                    el[3].data("to", "M4415.31,508.805c-36.226,0-36.226-1.164-72.451-1.164c-36.228,0-36.228-75.227-72.454-75.227s-36.227,58.66-72.452,58.66c-36.225,0-36.225,17.828-72.449,17.828c-36.224,0-36.224-41.573-72.447-41.573s-36.224,63.387-72.446,63.387c-36.226,0-36.226-22.549-72.451-22.549s-36.226-50.593-72.451-50.593c-36.227,0-36.227,64.79-72.453,64.79c-36.225,0-36.225-15.476-72.449-15.476c-36.226,0-36.226,21.003-72.451,21.003s-36.226-51.958-72.451-51.958c-36.225,0-36.225-28.154-72.449-28.154s-36.225,61.208-72.45,61.208s-36.226-28.855-72.451-28.855c-36.224,0-36.224,14.457-72.448,14.457c-36.226,0-36.226-56.692-72.451-56.692c-36.225,0-36.225,76.073-72.449,76.073c-36.224,0-36.224-35.474-72.447-35.474c-36.225,0-36.225,33.451-72.448,33.451c-36.226,0-36.226-59.554-72.45-59.554c-36.226,0-36.226,68.312-72.451,68.312c-36.225,0-36.225-101.008-72.45-101.008s-36.226,105.456-72.45,105.456c-36.224,0-36.224-71.711-72.447-71.711c-33.936,0-36.079,67.972-65.999,76.558h-25.988c-18.458-1.898-24.715-6.178-52.904-6.178c-36.224,0-36.224-51.916-72.446-51.916c-36.226,0-36.226,56.114-72.451,56.114c-36.223,0-36.223-86.871-72.445-86.871s-36.223,70.069-72.444,70.069c-36.225,0-36.225-0.327-72.449-0.327c-36.222,0-36.222-25.188-72.444-25.188s-36.223,33.359-72.444,33.359c-36.224,0-36.224-87.687-72.448-87.687c-36.221,0-36.221,88.12-72.442,88.12c-36.225,0-36.225-86.808-72.448-86.808c-36.225,0-36.225,84.146-72.449,84.146s-36.225,12.863-72.449,12.863s-36.225-53.295-72.449-53.295c-36.224,0-36.224,46.221-72.448,46.221s-36.225-67.538-72.45-67.538c-36.225,0-36.225,72.631-72.449,72.631c-36.224,0-36.224-0.189-72.448-0.189c-36.224,0-36.224-52.513-72.448-52.513c-36.223,0-36.223,45.317-72.447,45.317c-36.224,0-36.224-18.216-72.447-18.216c-36.225,0-36.225,41.267-72.449,41.267c-36.224,0-36.224-61.845-72.448-61.845c-36.224,0-36.224,27.69-72.447,27.69s-36.224-70.554-72.447-70.554c-36.225,0-36.225,97.119-72.45,97.119c-36.223,0-36.223-44.567-72.447-44.567s-36.224,31.201-72.447,31.201c-36.225,0-36.225-16.198-72.449-16.198c-36.224,0-36.224,46.09-72.447,46.09c-36.224,0-36.224-37.428-72.448-37.428s-36.224-53.36-72.447-53.36c-36.223,0-36.223,95.263-72.446,95.263c-36.225,0-36.225-40.343-72.449-40.343c-34.805,0-36.208-6.348-68.395-6.845v155.456c0.854,0.11,1.688,0.254,2.5,0.433V768H4435V503.358C4429.709,506.667,4423.42,508.805,4415.31,508.805z");
                    el[3].attr({clip: el[3].data("from")});
                    
                    el[4] = s.group();
                    el[4].add(
                        s.rect(0, 449, 4435, 318).attr({fill: "#808080", 'class': 'hills4'}),
                        s.path("M439.14,611.343c0-9.972-8.891-20.37-19.5-19.5c-36.901,3.025-192.244,13.898-193.157,13.775c-1.903-0.31-26.726,1.85-29.667,12.542c-2.691,9.784,3.221,21.773,13.62,23.987c14.481,3.082,29.217,3.609,43.95,4.316c3.284,0.158,6.565,0.371,9.842,0.643c0.407,0.034,0.814,0.077,1.221,0.116c1.318,7.181,6.509,13.772,13.994,15.927c35.438,10.197,71.447-2.092,107.194-2.304c10.629-0.063,19.5-8.822,19.5-19.5c0-0.359-0.036-0.711-0.055-1.066c0.901-0.92,1.791-1.861,2.672-2.825c1.008-1.103,2.055-2.162,3.137-3.191c0.148-0.142,0.339-0.311,0.538-0.483c0.314-0.203,0.628-0.405,0.944-0.604c0.57-0.344,1.152-0.663,1.743-0.969c1.2-0.421,2.436-0.733,3.667-1.043c0.877-0.22,5.708-0.928,0.857-0.321C430.184,629.523,439.14,622.971,439.14,611.343z").attr({fill: "#6e6e6e", "class": "hills5"}),
                        s.path("M1538.752,606.844c-19.921-0.021-196.881-60.336-408.752-84.344c-224.646-25.455-485.519-14.686-530.342-14.666c-10.631,0.005-19.5,8.866-19.5,19.5c0,10.626,8.869,19.505,19.5,19.5c44.773-0.021,89.544-1.411,134.316-0.418c22.887,0.508,45.764,1.701,68.539,4.029c5.154,0.526,10.299,1.141,15.438,1.802c0.162,0.022,0.318,0.044,0.514,0.071c1.744,0.242,3.485,0.502,5.227,0.763c2.891,0.431,5.773,0.902,8.656,1.384c10.799,1.806,21.525,4.043,32.152,6.675c3.219,0.797,6.484,0.786,9.543,0.077c6.504,0.892,12.973,1.945,19.412,3.127c3.088,1.293,6.186,2.564,9.289,3.817c24.365,9.842,49.408,17.896,74.096,26.871c2.862,1.041,5.718,2.102,8.57,3.171c1.136,0.427,2.271,0.857,3.406,1.29c-3.869-1.471,1.434,0.632,1.834,0.813c5.725,2.601,11.301,5.523,16.802,8.568c10.706,5.926,20.985,12.598,31.253,19.243c21.029,13.608,42.16,26.442,65.82,35.031c2.736,0.993,5.572,1.14,8.303,0.638c11.271,5.92,23.988,9.972,35.989,13.376c16.544,4.691,34.387,6.134,51.472,7.46c35.451,2.753,71.451,1.849,106.623-3.472c6.485-0.981,11.982-7.666,13.619-13.62c0.057-0.206,0.102-0.412,0.15-0.619c0.248-0.12,0.491-0.249,0.74-0.368c2.123-1.019,4.273-1.977,6.428-2.925c0.1-0.041,0.182-0.074,0.291-0.12c1.627-0.67,3.27-1.302,4.912-1.933c9.191-3.532,18.645-6.353,28.195-8.723c8.963-2.224,18.059-3.883,27.193-5.217c-0.607,0.105,4.215-0.528,4.873-0.605c2.849-0.33,5.704-0.606,8.561-0.87c5.15-0.477,10.312-0.817,15.477-1.104c40.44-2.247,80.944,0.755,121.4,0.797c10.63,0.011,19.5-8.879,19.5-19.5C1558.252,615.706,1549.382,606.854,1538.752,606.844z").attr({fill: "#6e6e6e", "class": "hills5"}),
                        s.path("M1856.783,534.837c-12.212,0.056-56.449-6.252-96.783,1.601c-36.378,7.082-69.569,28.36-73.418,29.099c-10.445,2.004-16.267,14.361-13.619,23.987c2.983,10.846,13.559,15.621,23.988,13.62c1.502-0.289,3.008-0.544,4.516-0.796c0.172,0.007,3.616-0.479,3.799-0.498c4.367-0.462,8.76-0.673,13.146-0.83c7.893-0.284,15.797-0.156,23.691-0.196c16.042-0.081,32.062-1.542,47.582-5.769c11.228-3.059,21.812-7.987,32.598-12.269c5.604-2.225,11.305-4.17,17.121-5.764c2.965-0.812,5.971-1.461,8.986-2.052c1.336-0.263,2.68-0.479,4.025-0.69c-2.898,0.476,3.587-0.373,4.367-0.443c10.582-0.95,19.5-8.151,19.5-19.5C1876.283,543.744,1867.414,534.788,1856.783,534.837z").attr({fill: "#6e6e6e", "class": "hills5"}),
                        s.path("M2735.871,594.843c-49.337-1.31-131.926-5.475-209.573-9.761c-93.897-5.183-180.567-10.542-192.467-11.241c-10.621-0.624-19.5,9.343-19.5,19.5c0,11.102,8.893,18.877,19.5,19.5c1.639,0.097,3.272,0.212,4.907,0.349c0.513,0.043,2.527,0.282,3.101,0.335c2.161,0.353,4.308,0.783,6.445,1.251c2.626,0.575,5.215,1.307,7.784,2.093c1.224,0.375,2.432,0.798,3.639,1.222c0.585,0.205,2.222,0.86,3.049,1.182c7.949,3.611,15.327,8.354,22.518,13.277c17.473,11.965,34.897,22.928,55.984,27.328c17.847,3.724,36.5,4.985,54.662,6.141c20.551,1.307,41.239,1.805,61.806,0.56c15.984-0.967,36.246-1.913,49.974-11.394c8.097-5.592,10.792-14.571,8.545-22.306c39.893,0.018,79.787-0.093,119.627,0.965c10.63,0.282,19.5-9.084,19.5-19.5C2755.371,603.5,2746.494,595.125,2735.871,594.843z").attr({fill: "#6e6e6e", "class": "hills5"}),
                        s.path("M3590.957,585.842c-10.141-1.017-46.254-16.964-81.373-26.928c-31.321-8.888-61.852-11.789-72.459-14.38c-10.317-2.521-21.109,3.156-23.987,13.62c-2.755,10.018,3.297,21.465,13.62,23.987c1.238,0.303,2.454,0.648,3.667,1.041c0.275,0.089,0.66,0.235,1.061,0.396c2.046,0.987,4.021,2.121,5.954,3.307c1.791,1.098,3.521,2.293,5.222,3.528c0.659,0.505,1.686,1.29,2.128,1.65c1.437,1.169,2.843,2.376,4.244,3.588c8.982,7.769,17.282,16.32,26.61,23.688c10.342,8.168,22.071,15.885,35.871,15.395c11.99-0.425,21.64-6.611,29.013-15.197c16.804,1.829,33.611,3.619,50.43,5.305c10.596,1.062,19.5-9.674,19.5-19.5C3610.457,593.91,3601.529,586.901,3590.957,585.842z").attr({fill: "#6e6e6e", "class": "hills5"}),
                        s.path("M4206.82,546.153c-2.918-10.609-13.625-15.943-23.987-13.62c-58.22,13.053-478.782,64.351-484.683,63.006c-10.354-2.358-21.076,3.037-23.987,13.62c-2.722,9.896,3.256,21.626,13.62,23.987c28.826,6.566,58.221,9.399,87.732,10.089c-0.023,0.369-0.038,0.739-0.038,1.11c0,11.065,8.89,18.925,19.5,19.5c32.309,1.752,64.686,1.423,96.944-1.11c31.577-2.479,63.762-6.276,94.342-14.775c28.164-7.828,55.008-19.871,81.623-31.789c6.121-2.741,12.24-5.487,18.376-8.196c3.071-1.356,6.15-2.695,9.233-4.024c0.274-0.118,1.815-0.772,2.628-1.119c1.704-0.712,3.411-1.42,5.12-2.119c13.094-5.361,26.405-10.181,39.982-14.17c1.65-0.485,3.31-0.943,4.969-1.4c3.625-1,6.728-3.026,9.119-5.664c11.861-3.45,23.804-6.628,35.886-9.337C4203.573,567.815,4209.535,556.021,4206.82,546.153z").attr({fill: "#6e6e6e", "class": "hills5"})
                    );
                    el[4].data("from", "M4435,620c-22.445-0.416-46.928,0-73.896,0c-294.693,0-294.693,0-589.387,0c-294.695,0-294.695,0-589.389,0c-294.695,0-294.695,0-589.391,0s-294.695,0-589.394,0c-294.697,0-294.697,0-589.394,0s-294.697,0-589.394,0c-294.698,0-294.698,0-589.396,0C128.849,620,68,620,0,620v148h4435V620z");
                    el[4].data("to", "M4435,538.081c-22.445-0.416-46.928-0.622-73.896-0.622c-294.693,0-294.693,80-589.387,80c-294.695,0-294.695-80-589.389-80c-294.695,0-294.695,80-589.391,80s-294.695-80-589.394-80c-294.697,0-294.697,80-589.394,80s-294.697-80-589.394-80c-294.698,0-294.698,80-589.396,80c-106.511,0-176.163-17.506-235.36-37.28V768h4435V538.081z");
                    el[4].attr({clip: el[4].data("from")});
                });
            }

            function animateSVGFlat() {
                for (var i = 0; i < el.length; i += 1) {
                    el[i].stop().animate({clip: el[i].data("from")}, 1e3);
                }
            }

            function animateSVGCurve() {
                for (var i = 0; i < el.length; i += 1) {
                    el[i].stop().animate({clip: el[i].data("to")}, 1e3);
                }
            }

            function setupCanvas() {
                canvas = $('#groundA1')[0];
                ctx = canvas.getContext('2d');

                AssetModel.loadGroup(1, function () {
                    setupImageList();
                    draw();    
                });
            }
          
//public
            instance.init = function () {
                var i = 0,
                    element;

                $body = $('body');
                $container = $('#layer1');
                $clouds = $('#cloudsA');

                //Determine if Canvas or SVG
                if (USE_CANVAS !== true) {
                    setupSVG();
                } else {
                    setupCanvas();
                }
            };

            instance.animateParallax = function (goal, duration) {
                if (USE_CANVAS !== true) {
                    var end = {x: goal};

                    new TWEEN.Tween(delta)
                        .to(end, duration)
                        .onUpdate(parallax)
                        .start();
                }
            };

            instance.update = function () {
                //bgposition -= 0.2;
                //$clouds.css({backgroundPosition: bgposition + 'px 0px'});
            };

    //state methods

            instance.addColor = function () {
                $body.addClass('css');
                $body.removeClass('space');

                if (USE_CANVAS === true) {
                    goalFrame = 4;
                    updateTerrain();
                } else {
                    if (curvy === true) {
                        animateSVGFlat();
                    }
                }

                curvy = false;
            };

            instance.addCurves = function () {
                $body.addClass('css');
                $body.removeClass('space');

                _log('add curve', curvy);
                if (USE_CANVAS === true) {
                    goalFrame = 9;
                    updateTerrain();
                } else {
                    if (curvy === false) {
                        animateSVGCurve();
                    }
                }

                curvy = true;
            };

            instance.addSpace = function () {
                $body.addClass('space');

                if (USE_CANVAS === true) {
                    goalFrame = 9;
                    updateTerrain();
                } else {
                    if (curvy === false) {
                        animateSVGCurve();
                    }
                }
                
                curvy = true;
            };

            instance.removeAll = function () {
                $body.removeClass('space');
                $body.removeClass('css');

                if (USE_CANVAS === true) {
                    goalFrame = 0;
                    updateTerrain();
                } else {
                    if (curvy === true) {
                        animateSVGFlat();
                    }
                }

                curvy = false;
            };

		};

		return new Scenery();
    });
